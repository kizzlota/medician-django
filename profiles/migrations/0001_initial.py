# -*- coding: utf-8 -*-
# Generated by Django 1.9b1 on 2015-10-28 15:29
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import profiles.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='Required. 30 characters or fewer. Letters, numbers and @/./+/-/_ characters', max_length=50, unique=True)),
                ('email', models.EmailField(max_length=255, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('social_img_url', models.CharField(blank=True, max_length=120, null=True)),
                ('profile_image', models.ImageField(default=b'/static/img/users/defaultuserimage.png', upload_to=b'uploads')),
                ('user_bio', models.TextField(blank=True, max_length=1200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegistrationCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('street', models.CharField(blank=True, max_length=150, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserAnalyzes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_analyzes', models.DateField(auto_now=True)),
                ('title_analyzes', models.TextField(blank=True, null=True)),
                ('everything_data', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='UserBioDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, default=b'/static/img/defaultuserimage.jpeg', null=True, upload_to=profiles.models.get_file_path)),
                ('name', models.CharField(max_length=100)),
                ('second_name', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
                ('ident_code', models.IntegerField(blank=True, null=True)),
                ('sex', models.CharField(max_length=10)),
                ('birthday', models.DateField()),
                ('telephone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=250, null=True)),
                ('invalidity', models.CharField(blank=True, max_length=200, null=True)),
                ('blood_type', models.IntegerField(blank=True, null=True)),
                ('rh_factor', models.BooleanField()),
                ('blood_transfusion', models.BooleanField()),
                ('diabetes', models.BooleanField()),
                ('infections_diseases', models.TextField(blank=True, max_length=500, null=True)),
                ('surgery', models.TextField(blank=True, max_length=500, null=True)),
                ('allegric_history', models.TextField(blank=True, max_length=500, null=True)),
                ('medicinal_intolerance', models.TextField(blank=True, max_length=500, null=True)),
                ('vaccinations', models.TextField(blank=True, max_length=200, null=True)),
                ('previous_diagnosis', models.TextField(blank=True, max_length=200, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('sport_life', models.TextField(blank=True, max_length=200, null=True)),
                ('bad_habits', models.TextField(blank=True, max_length=200, null=True)),
                ('special_nutrition', models.TextField(blank=True, max_length=200, null=True)),
                ('user_additional_comments', models.TextField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, default=b'/static/img/defaultuserimage.jpeg', null=True, upload_to=profiles.models.get_file_path)),
                ('date_of_add', models.DateField(auto_now_add=True)),
                ('name_file', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='useranalyzes',
            name='relation_to_files',
            field=models.ManyToManyField(to='profiles.UserFiles'),
        ),
        migrations.AddField(
            model_name='useractivity',
            name='relation_to_bio_details',
            field=models.ManyToManyField(to='profiles.UserBioDetails'),
        ),
        migrations.AddField(
            model_name='useractivity',
            name='relation_to_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='useractivity',
            name='relation_to_user_analyzes',
            field=models.ManyToManyField(to='profiles.UserAnalyzes'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_details',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='profiles.UserAddress'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
